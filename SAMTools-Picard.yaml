# Blueprint to deploy Meha-NJ task

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/rawaqasha/e-sc-cloudify/master/esc_nodetypes.yaml
  #- https://github.com/WorkflowCenter-Repositories/SAMTools-Picard-Task/raw/master/SAMTools-container_nodetype.yaml

inputs:

  input-dir:
      description: >
        The dir path of the input files  
      default: 'input'

  input-file:
      description: >
        input file for importFile1
      default: aligned-sequences

  docker-image: 
      description: > 
        Docker image to be used for container building
      default: 'rawa/samtools'

node_types:

  docker_container:
    derived_from: cloudify.nodes.Root
    properties:
      image_name:
        type: string
        default: { get_input: docker-image }
      container_ID:
        type: string
        default: SAMTools-container

node_templates:

  host:
    type: cloudify.nodes.Compute
    properties:
      ip: localhost
      install_agent: false

  starterBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/start-inhost.sh
          inputs:
            process:
              args: [SAMTools-Picard]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  SAMTools-container:
    type: docker_container
    properties:
      container_ID: SAMTools-container
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/container.sh
          inputs:
            process:
              args: [SAMTools-Picard]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: starterBlock

  Java:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [SAMTools-container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: SAMTools-container

  importFile:
    type: importfile
    properties:
      block_description: import file
      block_name: ImportFile1.jar
      block_category: File Management
      service_type: block
      Source: file1.txt
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/get-input.sh
          inputs:
            process:
             args: [SAMTools-Picard, SAMTools-container, { get_input: input-dir }, { get_input: input-file }] 
        start: 
          implementation: scripts/block-deploy3.sh
          inputs:
            process:
             args: [SAMTools-Picard, SAMTools-container, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/ImportFile1.jar', { get_input: input-file }]
    relationships:
      - type: cloudify.relationships.contained_in
        target: SAMTools-container
      - type: cloudify.relationships.depends_on
        target: Java

  SAMTools-Lib:
    type: SAMTools-lib
    properties:
      lib_name: samtools
      lib_URL: 'https://github.com/rawaqasha/work/raw/master/samtools'
      lib_path: SAMTools-Picard
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/SAMTools-install.sh
          inputs:
            process:
              args: [SAMTools-container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: SAMTools-container

  SAMTools:
    type: SAMtools-index
    properties:
      block_description: I don't know
      block_name: SAMTools.jar
      block_category: File Management
      service_type: block
    relationships:
      - type: cloudify.relationships.contained_in
        target: SAMTools-container
      - type: cloudify.relationships.depends_on
        target: SAMTools-Lib
      - type: block_link
        target: Picard-Add
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: scripts/datacopy.sh
              inputs:
                process:
                  args: [Picard-Add/output-SAM_BAM-files, SAMTools/input-BAM-files, SAMTools-Picard, SAMTools-container]        
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/block-deploy3.sh
          inputs:
            process:
              args: [SAMTools-Picard, SAMTools-container, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/SAMTools.jar',  get_property: [SAMTools-Lib, lib_path]]

  finalBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/final-inhost.sh
          inputs:
            process:
              args: [SAMTools-container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: SAMTools
